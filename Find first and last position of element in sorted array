class Solution {
public:
    int firstindex(vector<int>nums,int target){
            int index = -1;
            int l = 0;
            int r = nums.size()-1;
            while(l <= r){
                int mid = l + (r-l)/2;

                if(nums[mid] >= target){
                    r = mid-1;
                }
                else{
                    l = mid+1;
                }

                if(nums[mid] == target) index = mid;



            }

        return index;
    }

    int secindex(vector<int>nums, int target){
            int index = -1;
            int l = 0;
            int r = nums.size()-1;
            while(l <= r){
                int mid = l + (r-l) /2;

                if(nums[mid] <= target){
                    l = mid+1;
                }
                else{
                    r = mid-1;
                }

                if(nums[mid] == target) index = mid;
                
            }

        return index;
    }
        
  
    




    vector<int> searchRange(vector<int>& nums, int target) {

        vector<int> result(2,-1);
        result[0] = firstindex(nums, target);
        result[1] = secindex(nums, target);
        return result;
    }
    
};
